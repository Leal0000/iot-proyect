{"ast":null,"code":"import _asyncToGenerator from \"/home/leal/Documentos/repositorios/Angular_projects/Iot-Proyect/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport { interval } from 'rxjs';\nimport { takeWhile } from 'rxjs/operators';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"src/app/services/api.service\";\nimport * as i2 from \"@swimlane/ngx-charts\";\nexport class GraficasComponent {\n  constructor(api) {\n    this.api = api;\n    this.multi = [];\n    this.multi1 = [];\n    this.view = [700, 300];\n    this.datos_temperatura = [];\n    this.datos_humedad = [];\n    this.array1 = [];\n    this.legend = true;\n    this.showLabels = true;\n    this.animations = true;\n    this.xAxis = true;\n    this.yAxis = true;\n    this.showYAxisLabel = true;\n    this.showXAxisLabel = true;\n    this.xAxisLabel = 'tiempo';\n    this.yAxisLabel = 'Temperatura';\n    this.timeline = true;\n    this.colorScheme = {\n      domain: ['#FFEB3B', '#8F3985']\n    };\n    this.multi = [{\n      \"name\": \"Temperatura\",\n      \"series\": []\n    }, {\n      \"name\": \"Humedad\",\n      \"series\": []\n    }, {\n      \"name\": \"Pueba\",\n      \"series\": [{\n        \"name\": 2002,\n        \"value\": 75\n      }]\n    }];\n  }\n\n  ngOnInit() {\n    this.getTemps();\n    const contador = interval(5000);\n    contador.pipe(takeWhile(() => !stop));\n    contador.subscribe(() => {\n      this.getTemps();\n      console.log(\"hello world\");\n    });\n  }\n\n  onSelect(data) {\n    console.log('Item clicked', JSON.parse(JSON.stringify(data)));\n  }\n\n  onActivate(data) {\n    console.log('Active', JSON.parse(JSON.stringify(data)));\n  }\n\n  onDeactivate(data) {\n    console.log('Deactivate', JSON.parse(JSON.stringify(data)));\n  }\n\n  getTemps() {\n    var _this = this;\n\n    return _asyncToGenerator(function* () {\n      yield _this.api.getTemperature().subscribe(data => {\n        _this.array1 = data;\n        console.log(data);\n        console.log(Object.values(data));\n        console.log(_this.array1[0]['humd']);\n        const valor1 = _this.multi[0];\n        const valor2 = _this.multi[1];\n        var fecha = 2000;\n\n        for (let i = 0; i < _this.array1.length; i++) {\n          let a1 = {\n            \"name\": fecha + 1,\n            \"value\": _this.array1[i]['temp']\n          };\n          fecha = fecha + 1;\n          /*this.multi[0].series[\"name\"] = valor1.series.concat(1990 + i);*/\n\n          _this.multi[0].series = valor1.series.concat(a1);\n        }\n\n        var fecha = 2000;\n\n        for (let i = 0; i < _this.array1.length; i++) {\n          let a2 = {\n            \"name\": fecha + 1,\n            \"value\": _this.array1[i]['humd']\n          };\n          fecha = fecha + 1;\n          /*this.multi[0].series[\"name\"] = valor1.series.concat(1990 + i);*/\n\n          _this.multi[1].series = valor2.series.concat(a2);\n        }\n        /*let peru = {\n          \"name\": 'peru',\n          \"series\": [\n            {\n              \"name\": \"1990\",\n              \"value\": 50000\n            }\n          ]\n        };*/\n\n\n        console.log(_this.multi[0]);\n        _this.multi = [..._this.multi\n        /*, peru*/\n        ];\n      });\n    })();\n  }\n\n}\n\nGraficasComponent.ɵfac = function GraficasComponent_Factory(t) {\n  return new (t || GraficasComponent)(i0.ɵɵdirectiveInject(i1.ApiService));\n};\n\nGraficasComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: GraficasComponent,\n  selectors: [[\"app-graficas\"]],\n  decls: 3,\n  vars: 10,\n  consts: [[3, \"scheme\", \"legend\", \"showXAxisLabel\", \"showYAxisLabel\", \"xAxis\", \"yAxis\", \"xAxisLabel\", \"yAxisLabel\", \"timeline\", \"results\", \"select\", \"activate\", \"deactivate\"]],\n  template: function GraficasComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"p\");\n      i0.ɵɵtext(1, \"graficas works!\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(2, \"ngx-charts-line-chart\", 0);\n      i0.ɵɵlistener(\"select\", function GraficasComponent_Template_ngx_charts_line_chart_select_2_listener($event) {\n        return ctx.onSelect($event);\n      })(\"activate\", function GraficasComponent_Template_ngx_charts_line_chart_activate_2_listener($event) {\n        return ctx.onActivate($event);\n      })(\"deactivate\", function GraficasComponent_Template_ngx_charts_line_chart_deactivate_2_listener($event) {\n        return ctx.onDeactivate($event);\n      });\n      i0.ɵɵelementEnd();\n    }\n\n    if (rf & 2) {\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"scheme\", ctx.colorScheme)(\"legend\", ctx.legend)(\"showXAxisLabel\", ctx.showXAxisLabel)(\"showYAxisLabel\", ctx.showYAxisLabel)(\"xAxis\", ctx.xAxis)(\"yAxis\", ctx.yAxis)(\"xAxisLabel\", ctx.xAxisLabel)(\"yAxisLabel\", ctx.yAxisLabel)(\"timeline\", ctx.timeline)(\"results\", ctx.multi);\n    }\n  },\n  directives: [i2.LineChartComponent],\n  styles: [\"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJncmFmaWNhcy5jb21wb25lbnQuY3NzIn0= */\"]\n});","map":{"version":3,"sources":["/home/leal/Documentos/repositorios/Angular_projects/Iot-Proyect/src/app/vistas/graficas/graficas.component.ts","/home/leal/Documentos/repositorios/Angular_projects/Iot-Proyect/src/app/vistas/graficas/graficas.component.html"],"names":[],"mappings":"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","sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { NgxChartsModule } from '@swimlane/ngx-charts';\nimport { TempI } from 'src/app/models/temperatura.interface';\nimport { ApiService } from 'src/app/services/api.service';\nimport { interval } from 'rxjs';\nimport { takeWhile } from 'rxjs/operators'\n\n@Component({\n  selector: 'app-graficas',\n  templateUrl: './graficas.component.html',\n  styleUrls: ['./graficas.component.css']\n})\nexport class GraficasComponent implements OnInit {\n\n  multi: any[] = [];\n  multi1: any[] = [];\n  view: any[] = [700, 300];\n  datos_temperatura: TempI[] = [];\n  datos_humedad: any = [];\n  public array1: Array<any> = []\n\n\n  legend: boolean = true;\n  showLabels: boolean = true;\n  animations: boolean = true;\n  xAxis: boolean = true;\n  yAxis: boolean = true;\n  showYAxisLabel: boolean = true;\n  showXAxisLabel: boolean = true;\n  xAxisLabel: string = 'tiempo';\n  yAxisLabel: string = 'Temperatura';\n  timeline: boolean = true;\n\n\n\n\n  colorScheme: any = {\n    domain: ['#FFEB3B', '#8F3985' ]\n  };\n\n\n\n  constructor(private api: ApiService) {\n    this.multi =\n      [{\n        \"name\": \"Temperatura\",\n        \"series\": [\n\n        ]\n      },\n      {\n        \"name\": \"Humedad\",\n        \"series\": [\n\n        ]\n      },{\n        \"name\": \"Pueba\",\n        \"series\": [{\n          \"name\" : 2002,\n          \"value\" : 75\n        }\n          \n        ]\n      }\n      ]\n  }\n\n  ngOnInit(): void {\n    this.getTemps();\n    const contador = interval(5000)\n    contador.pipe(takeWhile(() => !stop))\n    contador.subscribe(() => {\n      this.getTemps();\n      console.log(\"hello world\");\n    });\n  }\n\n  onSelect(data: any): void {\n    console.log('Item clicked', JSON.parse(JSON.stringify(data)));\n  }\n\n  onActivate(data: any): void {\n    console.log('Active', JSON.parse(JSON.stringify(data)));\n  }\n  onDeactivate(data: any): void {\n    console.log('Deactivate', JSON.parse(JSON.stringify(data)));\n  }\n\n\n\n  async getTemps() {\n    await this.api.getTemperature().subscribe((data: any) => {\n      this.array1 = data;\n      console.log(data);\n      console.log(Object.values(data));\n      console.log(this.array1[0]['humd']);\n      const valor1 = this.multi[0];\n      const valor2 = this.multi[1];\n      var fecha = 2000;\n      for (let i = 0; i < this.array1.length; i++) {        \n        let a1 = {\n          \"name\": fecha + 1,\n          \"value\": this.array1[i]['temp']\n        }\n        fecha = fecha + 1;\n        /*this.multi[0].series[\"name\"] = valor1.series.concat(1990 + i);*/\n        this.multi[0].series = valor1.series.concat(a1)\n      }\n      var fecha = 2000;\n      for (let i = 0; i < this.array1.length; i++) {        \n        let a2 = {\n          \"name\": fecha + 1,\n          \"value\": this.array1[i]['humd']\n        }\n        fecha = fecha + 1;\n        /*this.multi[0].series[\"name\"] = valor1.series.concat(1990 + i);*/\n        this.multi[1].series = valor2.series.concat(a2)\n      }\n      /*let peru = {\n        \"name\": 'peru',\n        \"series\": [\n          {\n            \"name\": \"1990\",\n            \"value\": 50000\n          }\n        ]\n      };*/\n      console.log(this.multi[0]);\n      this.multi = [...this.multi /*, peru*/]\n    });\n  }\n\n  /*\n  <span *ngFor=\"let data of data_temp\">\n                                                <p>{{data.id_t}}</p>\n                                                <p>{{data.temp}}</p>\n                                                <p>{{data.humd}}</p>\n\n                                                \n\n\n                                            </span>\n  */\n\n}\n","<p>graficas works!</p>\n\n<ngx-charts-line-chart\n  [scheme]=\"colorScheme\"\n  [legend]=\"legend\"\n  [showXAxisLabel]=\"showXAxisLabel\"\n  [showYAxisLabel]=\"showYAxisLabel\"\n  [xAxis]=\"xAxis\"\n  [yAxis]=\"yAxis\"\n  [xAxisLabel]=\"xAxisLabel\"\n  [yAxisLabel]=\"yAxisLabel\"\n  [timeline]=\"timeline\"\n  [results]=\"multi\"\n  (select)=\"onSelect($event)\"\n  (activate)=\"onActivate($event)\"\n  (deactivate)=\"onDeactivate($event)\"\n  >\n</ngx-charts-line-chart>\n\n\n\n\n\n\n"],"sourceRoot":""},"metadata":{},"sourceType":"module"}